{"name":"Metrix","tagline":"A Server / Client parser for Illumina InterOp sequencer run metrics.","body":"Metrix - A server / client interface for Illumina Sequencing Metrics.\r\nMetrics are collected by parsing the binary InterOp sequencer statistics.\r\n\r\nCurrently supports Illumina's HiSeq 2000 and MiSeq formats. \r\nTested on HiSeq 2000 and MiSeq.\r\n\r\nCopyright (C) 2013 Bernd van der Veen\r\nEmail: b.vd.veen[at]nki.nl\r\n\r\nThis program comes with ABSOLUTELY NO WARRANTY;\r\nThis is free software, and you are welcome to redistribute it\r\nunder certain conditions; for more information please see LICENSE.txt\r\n\r\n### Run as Daemon \r\n\r\nHow to get started:\r\n\r\n1) Modify the metrix.properties file to reflect your setup (set: DAEMON=TRUE)\r\n\r\n2) Insert the table metrix.sql into your database\r\n\r\n3) If needed, make the desired modifications to the source code.\r\n\r\n4) Compile the java files using:\r\n\t\r\n\t/[PATH_TO_JAVA_7.0_OR_HIGHER]/bin/javac *.java\r\n\r\n5) Run Metrix with mysql connector library included in classpath:\r\n```\r\n/[PATH_TO_JAVA_7.0_OR_HIGHER]/bin/java -cp lib/mysql-connector-java-5.1.6.jar:. -Dproperties=metrix.properties MetrixDaemon\r\n```\r\n\r\n6) If all correct, the server and watcher service has started and all run folders will be parsed and inserted in the SQL database.\r\n\r\n7) Only the clientside has not been fully implemented. Please modify this source file to reflect your needs. \r\n\r\n8) Run MetrixClient with the java binary. Support for multi format object returns, Summary / SummaryCollection POJO or a XML string.\r\n\r\n9) Documentation on how to adapt the client side will follow in the future. If you've familiarized yourself with java and this source, \r\nfeel free to contribute code and / or answers.\r\n\r\n###Standalone \r\nHow to use the standalone Metrix application:\r\n\r\n1) Modify file metrix.properties to reflect the correct directory containing the illumina run directories.\r\n\r\n2) Compile the java files using: \r\n\r\n\t/[PATH_TO_JAVA_7.0_OR_HIGHER]/bin/javac *.java\r\n\r\n3) Run Metrix.java using:\r\n\r\n\t/[PATH_TO_JAVA_7.0_OR_HIGHER]/bin/java Metrix **Argument search term here**\r\n\r\nThe searchterm will be the string that is used to search in the directory names.\r\nThis can be a run identifier, flowcell ID or any character string (minimum length is 3)\r\nIf no searchterm is has been provided, the user will be prompted in the console.\r\n\r\n####Optionally\r\n4) On unix systems you can make this available on the command line anywhere on your server via /usr/local/bin)\r\nThis has to be achieved via a perl run script (please replace the (directory) paths below):\r\n\r\n```\r\n#!/usr/bin/perl\r\n\r\nuse warnings;\r\nuse strict;\r\n\r\nsystem(\"/[PATH_TO_JAVA_7.0_OR_HIGHER]/bin/java -Dproperties=metrix.properties -classpath [Full path to the Metrix directory here] Metrix @ARGV\");\r\n\r\n```\r\n\r\n5) Symlink this perl script in /usr/local/bin with the desired name.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}